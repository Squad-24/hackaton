// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalShare.Data;

namespace TechnicalShare.Migrations
{
    [DbContext(typeof(TechnicalShareContext))]
    [Migration("20220404233830_Update")]
    partial class Update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TechnicalShare.Models.Expertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Expertise");
                });

            modelBuilder.Entity("TechnicalShare.Models.MentorMentee", b =>
                {
                    b.Property<int>("MentorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ExpertiseId");

                    b.Property<int>("MenteeId");

                    b.Property<int?>("MentorId1");

                    b.HasKey("MentorId");

                    b.HasIndex("ExpertiseId");

                    b.HasIndex("MenteeId");

                    b.HasIndex("MentorId1");

                    b.ToTable("MentorMentee");
                });

            modelBuilder.Entity("TechnicalShare.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("TechnicalShare.Models.Mentee", b =>
                {
                    b.HasBaseType("TechnicalShare.Models.User");


                    b.ToTable("Mentee");

                    b.HasDiscriminator().HasValue("Mentee");
                });

            modelBuilder.Entity("TechnicalShare.Models.Mentor", b =>
                {
                    b.HasBaseType("TechnicalShare.Models.User");

                    b.Property<int?>("ExpertiseId");

                    b.Property<string>("ExpertiseName");

                    b.Property<int>("Level");

                    b.HasIndex("ExpertiseId");

                    b.ToTable("Mentor");

                    b.HasDiscriminator().HasValue("Mentor");
                });

            modelBuilder.Entity("TechnicalShare.Models.MentorMentee", b =>
                {
                    b.HasOne("TechnicalShare.Models.Expertise", "Expertise")
                        .WithMany()
                        .HasForeignKey("ExpertiseId");

                    b.HasOne("TechnicalShare.Models.Mentee", "Mentee")
                        .WithMany("Mentors")
                        .HasForeignKey("MenteeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TechnicalShare.Models.Mentor", "Mentor")
                        .WithMany("Mentees")
                        .HasForeignKey("MentorId1");
                });

            modelBuilder.Entity("TechnicalShare.Models.Mentor", b =>
                {
                    b.HasOne("TechnicalShare.Models.Expertise", "Expertise")
                        .WithMany("Mentors")
                        .HasForeignKey("ExpertiseId");
                });
#pragma warning restore 612, 618
        }
    }
}
